{"ast":null,"code":"import React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext();export const ThemeProvider=_ref=>{let{children}=_ref;const[theme,setTheme]=useState('light');const toggleTheme=()=>{setTheme(prev=>prev==='light'?'dark':'light');};const value={theme,setTheme,toggleTheme,isDark:theme==='dark'};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:value,children:children});};export const useTheme=()=>{const context=useContext(ThemeContext);if(!context){throw new Error('useTheme must be used within a ThemeProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","ThemeContext","ThemeProvider","_ref","children","theme","setTheme","toggleTheme","prev","value","isDark","Provider","useTheme","context","Error"],"sources":["C:/Users/User/Documents/GitHub/MediScan-AI/frontend/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState('light');\n\n  const toggleTheme = () => {\n    setTheme(prev => prev === 'light' ? 'dark' : 'light');\n  };\n\n  const value = {\n    theme,\n    setTheme,\n    toggleTheme,\n    isDark: theme === 'dark'\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,KAAM,CAAAC,YAAY,cAAGL,aAAa,CAAC,CAAC,CAEpC,MAAO,MAAM,CAAAM,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGR,QAAQ,CAAC,OAAO,CAAC,CAE3C,KAAM,CAAAS,WAAW,CAAGA,CAAA,GAAM,CACxBD,QAAQ,CAACE,IAAI,EAAIA,IAAI,GAAK,OAAO,CAAG,MAAM,CAAG,OAAO,CAAC,CACvD,CAAC,CAED,KAAM,CAAAC,KAAK,CAAG,CACZJ,KAAK,CACLC,QAAQ,CACRC,WAAW,CACXG,MAAM,CAAEL,KAAK,GAAK,MACpB,CAAC,CAED,mBACEL,IAAA,CAACC,YAAY,CAACU,QAAQ,EAACF,KAAK,CAAEA,KAAM,CAAAL,QAAA,CACjCA,QAAQ,CACY,CAAC,CAE5B,CAAC,CAED,MAAO,MAAM,CAAAQ,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,OAAO,CAAGhB,UAAU,CAACI,YAAY,CAAC,CACxC,GAAI,CAACY,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,8CAA8C,CAAC,CACjE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}