{"ast":null,"code":"import React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const LanguageContext=/*#__PURE__*/createContext();export const LanguageProvider=_ref=>{let{children}=_ref;const[currentLanguage,setCurrentLanguage]=useState('en');const setLanguage=lang=>{setCurrentLanguage(lang);};const value={currentLanguage,setLanguage};return/*#__PURE__*/_jsx(LanguageContext.Provider,{value:value,children:children});};export const useLanguage=()=>{const context=useContext(LanguageContext);if(!context){throw new Error('useLanguage must be used within a LanguageProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","LanguageContext","LanguageProvider","_ref","children","currentLanguage","setCurrentLanguage","setLanguage","lang","value","Provider","useLanguage","context","Error"],"sources":["C:/Users/User/Documents/GitHub/MediScan-AI/frontend/src/contexts/LanguageContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst LanguageContext = createContext();\n\nexport const LanguageProvider = ({ children }) => {\n  const [currentLanguage, setCurrentLanguage] = useState('en');\n\n  const setLanguage = (lang) => {\n    setCurrentLanguage(lang);\n  };\n\n  const value = {\n    currentLanguage,\n    setLanguage\n  };\n\n  return (\n    <LanguageContext.Provider value={value}>\n      {children}\n    </LanguageContext.Provider>\n  );\n};\n\nexport const useLanguage = () => {\n  const context = useContext(LanguageContext);\n  if (!context) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,KAAM,CAAAC,eAAe,cAAGL,aAAa,CAAC,CAAC,CAEvC,MAAO,MAAM,CAAAM,gBAAgB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC3C,KAAM,CAACE,eAAe,CAAEC,kBAAkB,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CAE5D,KAAM,CAAAS,WAAW,CAAIC,IAAI,EAAK,CAC5BF,kBAAkB,CAACE,IAAI,CAAC,CAC1B,CAAC,CAED,KAAM,CAAAC,KAAK,CAAG,CACZJ,eAAe,CACfE,WACF,CAAC,CAED,mBACEP,IAAA,CAACC,eAAe,CAACS,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAL,QAAA,CACpCA,QAAQ,CACe,CAAC,CAE/B,CAAC,CAED,MAAO,MAAM,CAAAO,WAAW,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAAC,OAAO,CAAGf,UAAU,CAACI,eAAe,CAAC,CAC3C,GAAI,CAACW,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,oDAAoD,CAAC,CACvE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}